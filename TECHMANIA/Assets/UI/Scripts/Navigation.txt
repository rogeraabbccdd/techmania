mainMenu = {
    panel = tm.root.Q("main-menu"),

    Show = function()
        tm.SetDiscordActivity("", tm.l10n.GetString("discord_state_main_menu"))
    end,

    Initialize = function()
        local panel = mainMenu.panel
        local editorSubButtons = panel.Q("editor-sub-buttons")
        editorSubButtons.display = false
        panel.Q("editor-button").RegisterCallback(eventType.Click, function()
            editorSubButtons.display = not editorSubButtons.display
        end)
    end
}

navigation = {
    -- Important: avoid deleting VisualElements, especially in batches,
    -- inside Show() of each panel. For additional information:
    -- https://forum.unity.com/threads/uitoolkit-styleanimation-issue-transition-property-references-non-set-value.1257483/
    --
    -- Update: this is fixed in Unity 2022.2.14

    TransitionTo = function(from, to)
        tm.StartCoroutine(function()
            TransitionPanelCoroutine(from.panel, to.panel,
                -100,  -- length
                function()  -- called 1 frame after "to" appears
                    if (from.Hide != nil) then from.Hide() end
                    if (to.Show != nil) then to.Show() end
                end)
        end)
    end,

    TransitionBackTo = function(from, to)
        tm.StartCoroutine(function()
            TransitionPanelCoroutine(from.panel, to.panel,
                100,  -- length
                function()  -- called 1 frame after "to" appears
                    if (from.Hide != nil) then from.Hide() end
                    if (to.Show != nil) then to.Show() end
                end)
        end)
    end,

    FadeTo = function(from, to)
        tm.StartCoroutine(function()
            FadeToBlackCoroutine(from.panel, to.panel,
                function()  -- called 1 frame after "to" appears
                    if (from.Hide != nil) then from.Hide() end
                    if (to.Show != nil) then to.Show() end
                end)
        end)
    end,
}

function SetUpNavigation()
    mainMenu.panel.Q("start-button").RegisterCallback(eventType.Click, function()
        selectTrackPanel.inEditor = false
        navigation.TransitionTo(mainMenu, selectTrackPanel)
    end)
    selectTrackPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(selectTrackPanel, mainMenu)
    end)

    -- select track panel --> select pattern panel is registered on track cards,
    -- handled by Select Track Panel.txt
    selectPatternPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(selectPatternPanel, selectTrackPanel)
    end)

    selectPatternPanel.panel.Q("modifier-sidesheet").Q("skins").Q("select-button").RegisterCallback(eventType.Click, function()
        selectSkinPanel.panelToGoBackTo = selectPatternPanel
        navigation.TransitionTo(selectPatternPanel, selectSkinPanel)
    end)
    selectSkinPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(selectSkinPanel, selectSkinPanel.panelToGoBackTo)
    end)

    selectPatternPanel.panel.Q("play-button").RegisterCallback(eventType.Click, function()
        gamePanel.inEditor = false
        navigation.FadeTo(selectPatternPanel, gamePanel)
    end)
    -- game panel --> select track panel can happen on multiple occasions, set up in
    -- Game Panel.txt.

    -- game panel --> result panel can happen on multiple occasions, set up in
    -- Game Panel.txt.
    resultPanel.panel.Q("retry-button").RegisterCallback(eventType.Click, function()
        navigation.FadeTo(resultPanel, gamePanel)
    end)
    resultPanel.panel.Q("select-track-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionTo(resultPanel, selectTrackPanel)
    end)

    mainMenu.panel.Q("setlists-button").RegisterCallback(eventType.Click, function()
        selectSetlistPanel.inEditor = false
        navigation.TransitionTo(mainMenu, selectSetlistPanel)
    end)
    selectSetlistPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(selectSetlistPanel, mainMenu)
    end)

    mainMenu.panel.Q("edit-tracks-button").RegisterCallback(eventType.Click, function()
        selectTrackPanel.inEditor = true
        navigation.TransitionTo(mainMenu, selectTrackPanel)
    end)
    -- select track panel (editor) --> main menu is the same as
    -- select track panel --> main menu.

    -- select track panel (editor) --> track setup panel is registered on track cards,
    -- handled by Select Track Panel.txt
    tm.editor.onExit = function()
        navigation.TransitionBackTo(editorTrackSetupPanel, selectTrackPanel)
    end

    tm.editor.onPreview = function(trackFolder, track, pattern)
        selectTrackPanel.selectedTrackFolder = trackFolder
        selectTrackPanel.selectedFullTrack = track
        selectPatternPanel.selectedPattern = pattern
        gamePanel.inEditor = true
        navigation.TransitionTo(editorPatternPanel, gamePanel)
    end
    gamePanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        gamePanel.ConcludeGame()
        navigation.TransitionBackTo(gamePanel, editorPatternPanel)
    end)

    mainMenu.panel.Q("edit-setlists-button").RegisterCallback(eventType.Click, function()
        selectSetlistPanel.inEditor = true
        navigation.TransitionTo(mainMenu, selectSetlistPanel)
    end)
    -- select setlist panel (editor) --> main menu is the same as
    -- select setlist panel --> main menu.

    mainMenu.panel.Q("options-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionTo(mainMenu, optionsPanel)
    end)
    optionsPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(optionsPanel, mainMenu)
    end)

    optionsPanel.panel.Q("touchscreen-test").Q("button").RegisterCallback(eventType.Click, function()
        navigation.TransitionTo(optionsPanel, touchscreenTestPanel)
    end)
    touchscreenTestPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(touchscreenTestPanel, optionsPanel)
    end)

    optionsPanel.panel.Q("skins").Q("button").RegisterCallback(eventType.Click, function()
        selectSkinPanel.panelToGoBackTo = optionsPanel
        navigation.TransitionTo(optionsPanel, selectSkinPanel)
    end)
    -- Select skin panel --> options panel is covered by
    -- Select skin panel --> select pattern panel.

    optionsPanel.panel.Q("offset-latency").Q("button").RegisterCallback(eventType.Click, function()
        navigation.TransitionTo(optionsPanel, timingCalibrationPanel)
    end)
    timingCalibrationPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(timingCalibrationPanel, optionsPanel)
    end)

    mainMenu.panel.Q("information-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionTo(mainMenu, infoPanel)
    end)
    infoPanel.panel.Q("back-button").RegisterCallback(eventType.Click, function()
        navigation.TransitionBackTo(infoPanel, mainMenu)
    end)

    mainMenu.panel.Q("quit-button").RegisterCallback(eventType.Click, function()
        tm.Quit()
    end)
end

mainMenu.Initialize()